name: Docker Image CI

on:
  push:
    branches: [ "develop" ]

env:
  FS_DOWNLOAD_SERVER: ${{ secrets.FS_DOWNLOAD_SERVER }}
  FS_DOWNLOAD_SERVER_USERNAME: ${{ secrets.FS_DOWNLOAD_SERVER_USERNAME }}
  FS_DOWNLOAD_SERVER_PASSWORD: ${{ secrets.FS_DOWNLOAD_SERVER_PASSWORD }}

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Build the Docker image
      run: docker build . --file jdk17/Dockerfile --build-arg FS_DOWNLOAD_SERVER=${{ env.FS_DOWNLOAD_SERVER }} --build-arg FS_DOWNLOAD_SERVER_USERNAME=${{ env.FS_DOWNLOAD_SERVER_USERNAME }} --build-arg FS_DOWNLOAD_SERVER_PASSWORD=${{ env.FS_DOWNLOAD_SERVER_PASSWORD }} --build-arg IMAGE_CREATED=$(date +%FT%T%Z) --tag my-image-name:jdk17
    - name: Start container for test
      run: container_id=$(docker run -d my-image-name:jdk17) && while [[ "$(docker inspect -f '{{.State.Health.Status}}' $container_id)" != "healthy" ]]; do sleep 1; done && echo "Container $container_id is now healthy!"
    - name: Clean up container
      run: docker stop $container_id && docker rm $container_id

